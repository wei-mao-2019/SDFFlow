train{
    expname = pretrain_flow
    dataset_class = datasets.scene_dataset.SceneDataset
    model_class = model.network_flow.VolSDFNetwork_RK2
    loss_class = model.loss_flow.VolSDFLoss
    learning_rate = 5.0e-4
    num_pixels = 2048
    train_split_pixels = 128
    checkpoint_freq = 200
    plot_freq = 200
    split_n_pixels = 256
    pretrained_dir = none
}
plot{
    plot_nimgs = 1
    resolution = 512
    grid_boundary = [-3.0, 3.0]
}
loss{
    eikonal_weight = 0.1
    fg_mask_loss_weight = 0.1

    rgb_loss = torch.nn.L1Loss
}
dataset{
    data_dir = total_capture
    load_motion_mask = True
    load_optical_flow = False
    surrounding_pixels = 0
    img_res = [1080, 1920]
    scan_id = ian3
}
model{
    feature_vector_size = 256
    scene_bounding_sphere = 3.0
    num_frames = 24
    step = 2
    white_bkgd = False
    render_depth = False
    render_normal = False
    render_rgb = True
    sampler_type = hierarchical # "uniform", "errorbound", "hierarchical"
    return_weights = True
    implicit_network{
        d_in = 3
        d_out = 1
        dims = [ 256, 256, 256, 256]
        activations = [leaky_relu, leaky_relu, leaky_relu, leaky_relu, none]

        geometric_init = True
        bias = 0.6
        skip_in = [3]
        weight_norm = False
        multires = 6
        multires_t = 4
        sphere_scale = 20.0
        is_pos_emb = True
    }
    rendering_network
    {
        mode = idr
        d_in = 10
        d_out = 3
        dims = [ 256, 256, 256, 256]
        weight_norm = False
        multires_view = 4
    }
    density
    {
        params_init{
            beta = 0.1
        }
        beta_init = 0.001
        beta_min = 0.0000000001
        beta_decay = 0.996
    }
    ray_sampler
    {
        near = 0.0
        N_samples = 64
        N_samples_eval = 128
        N_samples_extra = 32
        eps = 0.1
        beta_iters = 10
        max_total_iters = 5
    }
}
